{
  "type": "object",
  "title": "YAML Styles",
  "properties": {
    "fonts": {
      "$ref": "#/$defs/font_specs",
      "x-example": {
        "fonts": [
          {
            "name": "Vollkorn",
            "pathname": "vollkorn",
            "filename": "Vollkorn-Regular.ttf"
          },
          {
            "name": "OpenSans",
            "pathname": "opensans",
            "filename": "OpenSans-Regular.ttf"
          }
        ]
      }
    },
    "fallback_font": {
      "$ref": "#/$defs/fallback_font_spec",
      "x-example": {
        "fallback_font": {
          "name": "NotoSansSymbols2",
          "pathname": "NotoSansSymbols2",
          "filename": "NotoSansSymbols2-Regular.ttf"
        }
      }
    },
    "page": {
      "$ref": "#/$defs/page",
      "x-example": {
        "page": {
          "font": "Vollkorn",
          "size": 10,
          "color": "000000",
          "page_size": "A4",
          "page_layout": "portrait",
          "margin": "20mm"
        }
      }
    },
    "page_header": {
      "$ref": "#/$defs/page_header",
      "title": "Page header 1",
      "description": "Up to three header sections are supported. The content must be declared in the [frontmatter](FRONTMATTER.md) head of the markdown file."
    },
    "page_header_2": {
      "$ref": "#/$defs/page_header",
      "title": "Page header 2",
      "x-example": {
        "page_header_2": {
          "align": "center",
          "filter_pages": [
            1
          ],
          "offset": -30
        }
      }
    },
    "page_header_3": {
      "$ref": "#/$defs/page_header",
      "title": "Page header 3",
      "x-example": {
        "page_header_3": {
          "align": "right",
          "filter_pages": [
            1
          ],
          "offset": -30
        }
      }
    },
    "page_footer": {
      "$ref": "#/$defs/page_footer",
      "title": "Page footer",
      "description": "Up to three footer sections are supported.<br/>The content must be declared in the [frontmatter](FRONTMATTER.md) head of the markdown file.",
      "x-example": {
        "page_footer": {
          "align": "left",
          "offset": -30,
          "size": 8
        }
      }
    },
    "page_footer_2": {
      "$ref": "#/$defs/page_footer",
      "title": "Page footer 2",
      "x-example": {
        "page_footer_2": {
          "align": "center",
          "offset": -30,
          "size": 8
        }
      }
    },
    "page_footer_3": {
      "$ref": "#/$defs/page_footer",
      "title": "Page footer 3",
      "x-example": {
        "page_footer_3": {
          "align": "right",
          "offset": -30,
          "size": 8
        }
      }
    },
    "page_logo": {
      "$ref": "#/$defs/page_logo",
      "x-example": {
        "page_logo": {
          "disabled": false,
          "align": "left",
          "offset": -30,
          "max_width": "40mm"
        }
      }
    },
    "paragraph": {
      "title": "Paragraph",
      "description": "A block of text",
      "$ref": "#/$defs/paragraph",
      "x-example": {
        "paragraph": {
          "align": "justify",
          "padding_bottom": "2mm"
        }
      }
    },
    "header": {
      "title": "Header",
      "description": "Default styling for headers on all levels.<br/>use header_`x` as key for header level `x`.",
      "$ref": "#/$defs/header",
      "x-example": {
        "header": {
          "styles": [
            "bold"
          ],
          "padding_top": "2mm",
          "padding_bottom": "2mm"
        },
        "header_1": {
          "size": 14,
          "styles": [
            "bold",
            "italic"
          ]
        },
        "header_2": {
          "size": 12,
          "styles": [
            "bold"
          ]
        }
      }
    },
    "code": {
      "$ref": "#/$defs/code"
    },
    "codeblock": {
      "$ref": "#/$defs/codeblock"
    },
    "blockquote": {
      "$ref": "#/$defs/blockquote"
    },
    "link": {
      "$ref": "#/$defs/link"
    },
    "table": {
      "$ref": "#/$defs/table"
    },
    "html_table": {
      "$ref": "#/$defs/table"
    },
    "headless_table": {
      "$ref": "#/$defs/headless_table"
    },
    "image": {
      "$ref": "#/$defs/image"
    },
    "image_classes": {
      "$ref": "#/$defs/image_classes"
    },
    "hrule": {
      "$ref": "#/$defs/hrule"
    },
    "footnote_reference": {
      "$ref": "#/$defs/footnote_reference"
    },
    "footnote_definition": {
      "$ref": "#/$defs/footnote_definition"
    },
    "ordered_list": {
      "title": "Ordered list",
      "description": "Default styling for ordered lists on all levels.<br/>use ordered_list_`x` as key for ordered list level `x`.",
      "x-example": {
        "ordered_list": {
          "spacing": "2mm",
          "point_inline": false
        }
      },
      "$ref": "#/$defs/ordered_list"
    },
    "ordered_list_point": {
      "title": "Ordered list point",
      "description": "Default styling for ordered list points on all levels.<br/>use ordered_list_point_`x` as key for ordered list points level `x`.",
      "x-example": {
        "ordered_list_point": {
          "template": "<number>.",
          "list_style_type": "decimal",
          "spacing": "0.75mm",
          "spanning": true
        }
      },
      "$ref": "#/$defs/ordered_list_point"
    },
    "unordered_list": {
      "title": "Unordered list",
      "description": "Default styling for unordered lists on all levels.<br/>use unordered_list_`x` as key for unordered list level `x`.",
      "$ref": "#/$defs/unordered_list"
    },
    "unordered_list_point": {
      "title": "Unordered list point",
      "description": "Default styling for unordered list points on all levels.<br/>use unordered_list_point_`x` as key for unordered list points level `x`.",
      "x-example": {
        "unordered_list_point": {
          "sign": "•",
          "spacing": "0.75mm"
        }
      },
      "$ref": "#/$defs/unordered_list_point"
    },
    "task_list": {
      "$ref": "#/$defs/task_list"
    },
    "task_list_point": {
      "$ref": "#/$defs/task_list_point"
    },
    "fields_default": {
      "$ref": "#/$defs/fields_default"
    },
    "alerts": {
      "$ref": "#/$defs/alerts"
    }
  },
  "patternProperties": {
    "^header_\\d+": {
      "title": "Header level",
      "$ref": "#/$defs/header"
    },
    "^ordered_list_\\d+": {
      "title": "Ordered list level",
      "$ref": "#/$defs/ordered_list"
    },
    "^ordered_list_point_\\d+": {
      "title": "Ordered list point level",
      "$ref": "#/$defs/ordered_list_point"
    },
    "^unordered_list_\\d+": {
      "title": "Unordered list level",
      "$ref": "#/$defs/unordered_list"
    },
    "^unordered_list_point_\\d+": {
      "title": "Unordered list point level",
      "$ref": "#/$defs/unordered_list_point"
    }
  },
  "required": [],
  "additionalProperties": false,
  "$defs": {
    "font_specs": {
      "type": "array",
      "title": "External fonts",
      "description": "A list of specifications about external fonts",
      "items": {
        "$ref": "#/$defs/font_spec"
      }
    },
    "font_spec": {
      "type": "object",
      "title": "External font",
      "description": "A specification of external font files",
      "x-example": {
        "name": "Vollkorn",
        "pathname": "Vollkorn",
        "regular": "Vollkorn-Regular.ttf",
        "bold": "Vollkorn-Bold.ttf",
        "italic": "Vollkorn-Italic.ttf",
        "bold_italic": "Vollkorn-BoldItalic.ttf"
      },
      "properties": {
        "name": {
          "type": "string",
          "title": "Font name",
          "description": "The name of the external font how it is used in the styling",
          "examples": [
            "Vollkorn"
          ]
        },
        "pathname": {
          "title": "Font directory",
          "examples": [
            "vollkorn"
          ],
          "description": "The name of directory where the font files are located",
          "type": "string"
        },
        "regular": {
          "title": "Regular font file name",
          "examples": [
            "Vollkorn-Regular.ttf"
          ],
          "description": "The font file name for regular text",
          "type": "string"
        },
        "bold": {
          "title": "Bold font file name",
          "examples": [
            "Vollkorn-Bold.ttf"
          ],
          "description": "The font file name for bold text",
          "type": "string"
        },
        "italic": {
          "title": "Italic font file name",
          "examples": [
            "Vollkorn-Italic.ttf"
          ],
          "description": "The font file name for italic text",
          "type": "string"
        },
        "bold_italic": {
          "title": "Bold & italic font file name",
          "examples": [
            "Vollkorn-BoldItalic.ttf"
          ],
          "description": "The font file name for bold & italic text",
          "type": "string"
        }
      },
      "required": [
        "name",
        "pathname",
        "regular",
        "bold",
        "italic",
        "bold_italic"
      ]
    },
    "fallback_font_spec": {
      "type": "object",
      "title": "External fallback font",
      "description": "If a sign is not found in the specified font, a fallback font can be used",
      "properties": {
        "name": {
          "type": "string",
          "title": "Font name",
          "examples": [
            "NotoSansSymbols2"
          ],
          "description": "The name of the fallback font"
        },
        "pathname": {
          "type": "string",
          "title": "Font directory",
          "examples": [
            "NotoSansSymbols2"
          ],
          "description": "The name of directory where the fallback font file is located"
        },
        "filename": {
          "type": "string",
          "title": "Font file name",
          "examples": [
            "NotoSansSymbols2-Regular.ttf"
          ],
          "description": "The fallback font file name"
        }
      },
      "required": [
        "name",
        "pathname",
        "filename"
      ]
    },
    "color": {
      "type": "string",
      "title": "Color",
      "description": "A color in RRGGBB format",
      "examples": [
        "F0F0F0"
      ],
      "pattern": "^(?:[0-9a-fA-F]{3}){1,2}$"
    },
    "font": {
      "type": "object",
      "title": "Font properties",
      "description": "Properties to set the font style",
      "x-example": {
        "font": "Vollkorn",
        "size": 10,
        "character_spacing": 0,
        "styles": [],
        "color": "000000",
        "leading": 2
      },
      "properties": {
        "font": {
          "type": "string",
          "title": "Font name",
          "description": "The name of the font to use"
        },
        "size": {
          "$ref": "#/$defs/measurement",
          "title": "Font size",
          "description": "The size of the font to use"
        },
        "character_spacing": {
          "$ref": "#/$defs/measurement",
          "title": "Character spacing",
          "description": "Additional space between characters"
        },
        "leading": {
          "$ref": "#/$defs/measurement",
          "title": "Leading",
          "description": "Additional space between lines"
        },
        "color": {
          "$ref": "#/$defs/color",
          "title": "Font color",
          "description": "The color of the font to use"
        },
        "styles": {
          "type": "array",
          "title": "Font styles",
          "description": "The styles of the font to use",
          "items": {
            "$ref": "#/$defs/font_style"
          }
        }
      }
    },
    "font_style": {
      "type": "string",
      "title": "Font style",
      "description": "Style of the font to use",
      "examples": [
        "bold"
      ],
      "enum": [
        "bold",
        "italic",
        "underline",
        "strikethrough",
        "superscript",
        "subscript"
      ]
    },
    "page": {
      "type": "object",
      "title": "Page settings",
      "description": "Properties to set the basic page settings",
      "properties": {
        "page_layout": {
          "type": "string",
          "title": "Page layout",
          "description": "The layout of a page",
          "examples": [
            "portrait"
          ],
          "enum": [
            "portrait",
            "landscape"
          ]
        },
        "page_size": {
          "type": "string",
          "title": "Page size",
          "description": "The size of a page",
          "examples": [
            "EXECUTIVE"
          ],
          "enum": [
            "EXECUTIVE",
            "TABLOID",
            "LETTER",
            "LEGAL",
            "FOLIO",
            "A0",
            "A1",
            "A2",
            "A3",
            "A4",
            "A5",
            "A6",
            "A7",
            "A8",
            "A9",
            "A10",
            "B0",
            "B1",
            "B2",
            "B3",
            "B4",
            "B5",
            "B6",
            "B7",
            "B8",
            "B9",
            "B10",
            "C0",
            "C1",
            "C2",
            "C3",
            "C4",
            "C5",
            "C6",
            "C7",
            "C8",
            "C9",
            "C10",
            "RA0",
            "RA1",
            "RA2",
            "RA3",
            "RA4",
            "SRA0",
            "SRA1",
            "SRA2",
            "SRA3",
            "SRA4",
            "4A0",
            "2A0"
          ]
        }
      },
      "allOf": [
        {
          "title": "Default font settings",
          "$ref": "#/$defs/font"
        },
        {
          "title": "Page margins",
          "$ref": "#/$defs/margin"
        }
      ]
    },
    "page_footer": {
      "type": "object",
      "title": "Page footer",
      "properties": {
        "filter_pages": {
          "$ref": "#/$defs/pages_filter"
        },
        "align": {
          "$ref": "#/$defs/alignment"
        },
        "offset": {
          "title": "Offset position from page bottom",
          "examples": [
            -30
          ],
          "$ref": "#/$defs/measurement_signed"
        }
      },
      "allOf": [
        {
          "$ref": "#/$defs/font"
        }
      ]
    },
    "page_header": {
      "type": "object",
      "title": "Page header",
      "x-example": {
        "page_header": {
          "align": "left",
          "filter_pages": [
            1,
            2
          ],
          "offset": -30
        }
      },
      "properties": {
        "filter_pages": {
          "$ref": "#/$defs/pages_filter"
        },
        "align": {
          "$ref": "#/$defs/alignment"
        },
        "offset": {
          "title": "Offset position from page top",
          "examples": [
            -30
          ],
          "$ref": "#/$defs/measurement_signed"
        }
      },
      "allOf": [
        {
          "$ref": "#/$defs/font"
        }
      ]
    },
    "pages_filter": {
      "title": "Pages to skip",
      "description": "A list of pages to skip",
      "examples": [
        "- 1 = not on first page",
        "- 2 = not on second page"
      ],
      "type": "array",
      "items": {
        "type": "integer"
      }
    },
    "page_logo": {
      "title": "Page logo",
      "description": "A logo image in the header.<br/>The image filename must be declared in the [frontmatter](FRONTMATTER.md) head of the markdown file. ",
      "type": "object",
      "properties": {
        "filter_pages": {
          "$ref": "#/$defs/pages_filter"
        },
        "align": {
          "$ref": "#/$defs/alignment"
        },
        "max_width": {
          "$ref": "#/$defs/measurement",
          "title": "Maximum width of the image"
        },
        "height": {
          "$ref": "#/$defs/measurement",
          "title": "Height of the image"
        },
        "offset": {
          "title": "Offset position from page top",
          "examples": [
            -30
          ],
          "$ref": "#/$defs/measurement_signed"
        },
        "disabled": {
          "title": "Disable logo",
          "description": "Disable or enable the page logo",
          "examples": [
            false
          ],
          "type": "boolean"
        }
      }
    },
    "hrule": {
      "type": "object",
      "title": "Horizontal rule",
      "description": "Styling for horizontal lines",
      "properties": {
        "line_width": {
          "title": "Sets the stroke width of the horizontal rule",
          "$ref": "#/$defs/measurement"
        }
      },
      "x-example": {
        "hrule": {
          "line_width": 1
        }
      },
      "allOf": [
        {
          "$ref": "#/$defs/margin"
        }
      ]
    },
    "margin": {
      "title": "Margin properties",
      "description": "Properties to set margins",
      "type": "object",
      "x-example": {
        "margin": "10mm",
        "margin_top": "15mm"
      },
      "properties": {
        "margin": {
          "title": "Margin",
          "description": "One value for margin on all sides",
          "$ref": "#/$defs/measurement"
        },
        "margin_left": {
          "title": "Margin left",
          "description": "Margin only on the left side",
          "$ref": "#/$defs/measurement"
        },
        "margin_right": {
          "title": "Margin right",
          "description": "Margin only on the right side",
          "$ref": "#/$defs/measurement"
        },
        "margin_top": {
          "title": "Margin top",
          "description": "Margin only on the top side",
          "$ref": "#/$defs/measurement"
        },
        "margin_bottom": {
          "title": "Margin bottom",
          "description": "Margin only on the bottom side",
          "$ref": "#/$defs/measurement"
        }
      }
    },
    "padding": {
      "title": "Padding properties",
      "description": "Properties to set paddings",
      "type": "object",
      "x-example": {
        "padding": "10mm",
        "padding_top": "15mm"
      },
      "properties": {
        "padding": {
          "title": "Padding",
          "description": "One value for padding on all sides",
          "$ref": "#/$defs/measurement"
        },
        "padding_left": {
          "title": "Padding left",
          "description": "Padding only on the left side",
          "$ref": "#/$defs/measurement"
        },
        "padding_right": {
          "title": "Padding right",
          "description": "Padding only on the right side",
          "$ref": "#/$defs/measurement"
        },
        "padding_top": {
          "title": "Padding top",
          "description": "Padding only on the top side",
          "$ref": "#/$defs/measurement"
        },
        "padding_bottom": {
          "title": "Padding bottom",
          "description": "Padding only on the bottom side",
          "$ref": "#/$defs/measurement"
        }
      }
    },
    "measurement": {
      "type": [
        "number",
        "string"
      ],
      "pattern": "^([0-9\\.]+)(mm|cm|dm|m|in|ft|yr|pt)$",
      "description": "A number >= 0 and an optional unit",
      "examples": [
        "10mm",
        "10"
      ]
    },
    "measurement_signed": {
      "type": [
        "number",
        "string"
      ],
      "pattern": "^-?([0-9\\.]+)(mm|cm|dm|m|in|ft|yr|pt)$",
      "description": "A positive or negative number and an optional unit"
    },
    "alignment": {
      "title": "Alignment",
      "description": "How the element should be aligned",
      "examples": [
        "center"
      ],
      "type": "string",
      "enum": [
        "left",
        "center",
        "right"
      ]
    },
    "unordered_list": {
      "type": "object",
      "title": "Unordered list",
      "x-example": {
        "unordered_list": {
          "spacing": "1.5mm",
          "padding_top": "2mm",
          "padding_bottom": "2mm"
        }
      },
      "properties": {
        "spacing": {
          "title": "Spacing",
          "description": "Additional space between list items",
          "$ref": "#/$defs/measurement"
        }
      },
      "allOf": [
        {
          "$ref": "#/$defs/font"
        },
        {
          "$ref": "#/$defs/padding"
        }
      ]
    },
    "task_list": {
      "type": "object",
      "title": "Task list",
      "x-example": {
        "task_list": {
          "spacing": "1.5mm",
          "padding_top": "2mm",
          "padding_bottom": "2mm"
        }
      },
      "properties": {
        "spacing": {
          "title": "Spacing",
          "description": "Additional space between list items",
          "$ref": "#/$defs/measurement"
        }
      },
      "allOf": [
        {
          "$ref": "#/$defs/font"
        },
        {
          "$ref": "#/$defs/padding"
        }
      ]
    },
    "unordered_list_point": {
      "type": "object",
      "title": "Unordered list point",
      "properties": {
        "sign": {
          "title": "Sign",
          "description": "The 'bullet point' character used in the list",
          "type": "string"
        },
        "spacing": {
          "title": "Spacing",
          "description": "Space between point and list item content",
          "$ref": "#/$defs/measurement"
        }
      },
      "allOf": [
        {
          "$ref": "#/$defs/font"
        }
      ]
    },
    "task_list_point": {
      "type": "object",
      "title": "Task list point",
      "x-example": {
        "task_list_point": {
          "checked": "☑",
          "unchecked": "☐",
          "spacing": "0.75mm"
        }
      },
      "properties": {
        "checked": {
          "title": "Checked sign",
          "description": "Sign for checked state of a task list item",
          "type": "string"
        },
        "unchecked": {
          "title": "Unchecked sign",
          "description": "Sign for unchecked state of a task list item",
          "type": "string"
        },
        "spacing": {
          "title": "Spacing",
          "description": "Additional space between point and list item content",
          "$ref": "#/$defs/measurement"
        }
      },
      "allOf": [
        {
          "$ref": "#/$defs/font"
        }
      ]
    },
    "ordered_list": {
      "type": "object",
      "title": "Ordered list level",
      "properties": {
        "spacing": {
          "title": "Spacing",
          "description": "Additional space between list items",
          "$ref": "#/$defs/measurement"
        },
        "point_inline": {
          "title": "Inline point",
          "description": "Do not indent paragraph text, but include the point into the first paragraph",
          "type": "boolean"
        }
      },
      "allOf": [
        {
          "$ref": "#/$defs/font"
        },
        {
          "$ref": "#/$defs/padding"
        }
      ]
    },
    "ordered_list_point": {
      "type": "object",
      "title": "Ordered list point level",
      "properties": {
        "spacing": {
          "$ref": "#/$defs/measurement"
        },
        "alphabetical": {
          "title": "Alphabetical bullet points",
          "description": "(deprecated; use list_style_type) Convert the list item number into a character, eg. `a.` `b.` `c.`",
          "type": "boolean"
        },
        "list_style_type": {
          "title": "List style type",
          "description": "The style of the list bullet points, eg. `decimal`, `lower-latin`, `upper-roman`",
          "type": "string",
          "enum": [
            "decimal",
            "lower-latin",
            "lower-roman",
            "upper-latin",
            "upper-roman"
          ]
        },
        "spanning": {
          "title": "Spanning",
          "description": "Use the width of the largest bullet as indention.",
          "type": "boolean"
        },
        "template": {
          "title": "Template",
          "description": "customize what the prefix should contain, eg. `(<number>)`",
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/$defs/font"
        }
      ]
    },
    "footnote_reference": {
      "type": "object",
      "title": "Footnote reference",
      "x-example": {
        "footnote_reference": {
          "size": 13,
          "styles": [
            "superscript"
          ],
          "color": "000088"
        }
      },
      "allOf": [
        {
          "$ref": "#/$defs/font"
        }
      ]
    },
    "footnote_definition": {
      "type": "object",
      "title": "Footnote definition",
      "x-example": {
        "footnote_definition": {
          "point": {
            "size": 13,
            "styles": [
              "superscript"
            ],
            "color": "000000"
          }
        }
      },
      "properties": {
        "point": {
          "type": "object",
          "title": "Footnote definition point",
          "description": "Styling of the point sign for footnotes",
          "allOf": [
            {
              "$ref": "#/$defs/font"
            }
          ]
        }
      }
    },
    "link": {
      "type": "object",
      "title": "Link",
      "description": "Styling a clickable link",
      "x-example": {
        "link": {
          "color": "000088"
        }
      },
      "allOf": [
        {
          "$ref": "#/$defs/font"
        }
      ]
    },
    "code": {
      "type": "object",
      "title": "Code",
      "description": "Styling to denote a word or phrase as code",
      "x-example": {
        "code": {
          "font": "Consolas",
          "color": "880000"
        }
      },
      "allOf": [
        {
          "$ref": "#/$defs/font"
        }
      ]
    },
    "header": {
      "type": "object",
      "title": "Header",
      "allOf": [
        {
          "$ref": "#/$defs/font"
        },
        {
          "$ref": "#/$defs/padding"
        }
      ]
    },
    "blockquote": {
      "type": "object",
      "title": "Blockquote",
      "description": "Styling to denote a paragraph as quote",
      "x-example": {
        "blockquote": {
          "background_color": "f4f9ff",
          "size": 14,
          "styles": [
            "italic"
          ],
          "color": "0f3b66",
          "border_color": "b8d6f4",
          "border_width": 1,
          "no_border_right": true,
          "no_border_left": false,
          "no_border_bottom": true,
          "no_border_top": true
        }
      },
      "properties": {
        "background_color": {
          "$ref": "#/$defs/color"
        }
      },
      "allOf": [
        {
          "$ref": "#/$defs/font"
        },
        {
          "$ref": "#/$defs/border"
        },
        {
          "$ref": "#/$defs/padding"
        },
        {
          "$ref": "#/$defs/margin"
        }
      ]
    },
    "codeblock": {
      "type": "object",
      "title": "Code block",
      "description": "Styling to denote a paragraph as code",
      "x-example": {
        "codeblock": {
          "background_color": "F5F5F5",
          "font": "Consolas",
          "size": 8,
          "color": "880000",
          "padding": "3mm",
          "margin_top": "2mm",
          "margin_bottom": "2mm"
        }
      },
      "properties": {
        "background_color": {
          "$ref": "#/$defs/color"
        }
      },
      "allOf": [
        {
          "$ref": "#/$defs/font"
        },
        {
          "$ref": "#/$defs/padding"
        },
        {
          "$ref": "#/$defs/margin"
        }
      ]
    },
    "table": {
      "type": "object",
      "title": "Table",
      "x-example": {
        "table": {
          "auto_width": true,
          "header": {
            "background_color": "F0F0F0",
            "no_repeating": true,
            "size": 12
          },
          "cell": {
            "background_color": "000FFF",
            "size": 10
          }
        }
      },
      "properties": {
        "auto_width": {
          "title": "Automatic column widths",
          "description": "Table columns should fit the content, equal spacing of columns if value is `false`",
          "type": "boolean"
        },
        "header": {
          "$ref": "#/$defs/table_header"
        },
        "cell": {
          "$ref": "#/$defs/table_cell"
        }
      },
      "allOf": [
        {
          "$ref": "#/$defs/margin"
        },
        {
          "$ref": "#/$defs/border"
        }
      ]
    },
    "headless_table": {
      "type": "object",
      "title": "Headless table",
      "description": "Tables without or empty header rows can be styled differently.",
      "x-example": {
        "headless_table": {
          "auto_width": true,
          "cell": {
            "style": "underline",
            "background_color": "000FFF"
          }
        }
      },
      "properties": {
        "auto_width": {
          "title": "Automatic column widths",
          "description": "Table columns should fit the content, equal spacing of columns if value is `false`",
          "type": "boolean"
        },
        "cell": {
          "$ref": "#/$defs/table_cell"
        }
      },
      "allOf": [
        {
          "$ref": "#/$defs/margin"
        },
        {
          "$ref": "#/$defs/border"
        }
      ]
    },
    "table_cell": {
      "type": "object",
      "title": "Table cell",
      "description": "Properties for table cell style",
      "allOf": [
        {
          "$ref": "#/$defs/font"
        },
        {
          "$ref": "#/$defs/padding"
        },
        {
          "$ref": "#/$defs/border"
        }
      ]
    },
    "table_header": {
      "type": "object",
      "title": "Table header",
      "description": "Properties for table header cell style",
      "properties": {
        "background_color": {
          "$ref": "#/$defs/color"
        },
        "no_repeating": {
          "title": "Disable header repeating",
          "description": "Disable table headers should be repeated if table spawns over pages with `true`",
          "type": "boolean"
        }
      },
      "allOf": [
        {
          "$ref": "#/$defs/font"
        }
      ]
    },
    "paragraph": {
      "type": "object",
      "title": "Paragraph",
      "properties": {
        "align": {
          "title": "Alignment",
          "description": "How the text should be aligned",
          "type": "string",
          "enum": [
            "left",
            "center",
            "right",
            "justify"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/$defs/font"
        },
        {
          "$ref": "#/$defs/padding"
        }
      ]
    },
    "image": {
      "type": "object",
      "title": "Image",
      "description": "Styling of images",
      "x-example": {
        "image": {
          "max_width": "50mm",
          "margin": "2mm",
          "margin_bottom": "3mm",
          "align": "center",
          "caption": {
            "align": "center",
            "size": 8
          }
        }
      },
      "properties": {
        "max_width": {
          "$ref": "#/$defs/measurement",
          "title": "Maximum width of the image"
        },
        "align": {
          "$ref": "#/$defs/alignment"
        },
        "caption": {
          "title": "Image caption",
          "description": "Styling for the caption below an image",
          "$ref": "#/$defs/paragraph"
        }
      },
      "allOf": [
        {
          "$ref": "#/$defs/margin"
        }
      ]
    },
    "border": {
      "type": "object",
      "title": "Border properties",
      "description": "Properties to set borders",
      "x-example": {
        "border_color": "F000FF",
        "border_color_top": "000FFF",
        "border_color_bottom": "FFF000",
        "no_border_left": true,
        "no_border_right": true,
        "border_width": "0.25mm",
        "border_width_left": "0.5mm",
        "border_width_right": "0.5mm"
      },
      "properties": {
        "border_width": {
          "title": "Border width",
          "description": "One value for border line width on all sides",
          "$ref": "#/$defs/measurement"
        },
        "border_width_left": {
          "title": "Border width left",
          "description": "Border width only on the left side",
          "$ref": "#/$defs/measurement"
        },
        "border_width_top": {
          "title": "Border width top",
          "description": "Border width only on the top side",
          "$ref": "#/$defs/measurement"
        },
        "border_width_right": {
          "title": "Border width right",
          "description": "Border width only on the right side",
          "$ref": "#/$defs/measurement"
        },
        "border_width_bottom": {
          "title": "Border width bottom",
          "description": "Border width only on the bottom side",
          "$ref": "#/$defs/measurement"
        },
        "border_color": {
          "title": "Border color",
          "description": "One value for border color on all sides",
          "$ref": "#/$defs/color"
        },
        "border_color_left": {
          "title": "Border color left",
          "description": "Border color only on the left side",
          "$ref": "#/$defs/color"
        },
        "border_color_top": {
          "title": "Border color top",
          "description": "Border color only on the top side",
          "$ref": "#/$defs/color"
        },
        "border_color_right": {
          "title": "Border color right",
          "description": "Border color only on the right side",
          "$ref": "#/$defs/color"
        },
        "border_color_bottom": {
          "title": "Border color bottom",
          "description": "Border color only on the bottom side",
          "$ref": "#/$defs/color"
        },
        "no_border": {
          "title": "Disable borders",
          "description": "Turn off borders on all sides",
          "type": "boolean"
        },
        "no_border_left": {
          "title": "Disable border left",
          "description": "Turn off border on the left sides",
          "type": "boolean"
        },
        "no_border_top": {
          "title": "Disable border top",
          "description": "Turn off border on the top sides",
          "type": "boolean"
        },
        "no_border_right": {
          "title": "Disable border right",
          "description": "Turn off border on the right sides",
          "type": "boolean"
        },
        "no_border_bottom": {
          "title": "Disable border bottom",
          "description": "Turn off border on the bottom sides",
          "type": "boolean"
        }
      }
    },
    "image_classes": {
      "type": "object",
      "title": "Image classes",
      "description": "Styling for images by class names",
      "patternProperties": {
        ".*": {
          "$ref": "#/$defs/image"
        }
      }
    },
    "fields_default": {
      "type": "object",
      "title": "md-to-pdf default fields settings",
      "properties": {
        "pdf_language": {
          "type": "string"
        },
        "pdf_header": {
          "type": "string"
        },
        "pdf_header_2": {
          "type": "string"
        },
        "pdf_header_3": {
          "type": "string"
        },
        "pdf_footer": {
          "type": "string"
        },
        "pdf_footer_2": {
          "type": "string"
        },
        "pdf_footer_3": {
          "type": "string"
        },
        "pdf_header_logo": {
          "type": "string"
        },
        "pdf_hyphenation": {
          "type": "boolean"
        },
        "pdf_fields": {
          "type": "object",
          "title": "md-to-pdf default custom fields values",
          "patternProperties": {
            ".*": {
              "type": [
                "string",
                "number"
              ]
            }
          }
        }
      }
    },
    "alert": {
      "type": "object",
      "title": "Alert",
      "description": "Styling to denote a quote as alert box",
      "x-example": {
        "ALERT": {
          "alert_color": "f4f9ff",
          "border_color": "f4f9ff",
          "border_width": 2,
          "no_border_right": true,
          "no_border_left": false,
          "no_border_bottom": true,
          "no_border_top": true
        }
      },
      "properties": {
        "background_color": {
          "$ref": "#/$defs/color"
        },
        "alert_color": {
          "$ref": "#/$defs/color"
        }
      },
      "allOf": [
        {
          "$ref": "#/$defs/font"
        },
        {
          "$ref": "#/$defs/border"
        },
        {
          "$ref": "#/$defs/padding"
        },
        {
          "$ref": "#/$defs/margin"
        }
      ]
    },
    "alerts": {
      "type": "object",
      "title": "alert boxes (styled blockquotes)",
      "properties": {
        "NOTE": {
          "$ref": "#/$defs/alert"
        },
        "TIP": {
          "$ref": "#/$defs/alert"
        },
        "WARNING": {
          "$ref": "#/$defs/alert"
        },
        "IMPORTANT": {
          "$ref": "#/$defs/alert"
        },
        "CAUTION": {
          "$ref": "#/$defs/alert"
        }
      }
    }
  }
}
